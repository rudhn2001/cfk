SOURCE CONNECTOR

CREATE A POSTGRESQL POD IN KUBERNETES AND THE CONFLUENT PLATFORM POD IN THE KUBERNETES ALONG WITH CONNECT AND CONTROL CENTER
CONNECT THE POSTGRESQL POD WITH THE TOPIC IN THE CONFLUENT POD
IF POSSIBLE CREATE A JAVA PRODUCER AND CONSUMER PODS , THE JAVA PRODUCER POD SENDS THE DATA INTO THE POSTGRES WHICH WILL IN TURN SEND THE DATA IN THE TOPIC
(OPTIONAL)


1. created a POSTGRESQL config yaml

sudo kubectl apply -f postgres-secret.yaml

- get the config map by : sudo kubectl get ConfigMap

 2. created a pv for POSTGRESQL

 sudo kubectl apply -f psql-pv.yaml

- get the pv by sudo kubectl get pv

3. create a pv claim

sudo kubectl apply -f psql-claim.yaml

- get the pvc by sudo kubectl get pvc

4. create a deployment and service of POSTGRESQL

sudo kubectl apply -f postgres.yaml
sudo kubectl get  pods

5. connect to postgresql using kubectl exec command

sudo kubectl exec -it postgres-76dcf974cb-7hqqz -- psql -h localhost -U postgres --password -p 5432 users

Backup and Restore PostgreSQL Database
kubectl exec -it postgres-665b7554dc-cddgq -- pg_dump -U ps_user -d ps_db > db_backup.sql
kubectl cp db_backup.sql postgres-665b7554dc-cddgq:/tmp/db_backup.sql
psql -U ps_user -d ps_db -f /tmp/db_backup.sql



io.confluent.connect.jdbc.JdbcSourceConnector


kubectl create secret generic mypwds \
        --from-literal=rootUser=root \
        --from-literal=rootHost=% \
        --from-literal=rootPassword="sakila"




helm install mycluster mysql-operator/mysql-innodbcluster \
        --namespace confluent \
        --set credentials.root.user='root' \
        --set credentials.root.password='sakila' \
        --set credentials.root.host='%' \
        --set serverInstances=1 \
        --set routerInstances=1