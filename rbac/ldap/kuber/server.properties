######## Confluent ServeR Settings FOR LDAP AND RBAC  ###############
authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer

# Specify a list of Access Rule Providers to retain ACLs that have already enables RBAC
confluent.authorizer.access.rule.providers= ZK_ACL,CONFLUENT

# Specify when bootstrapping Confluent Platform and to assign a SystemAdmin
super.users=User:ANONYMOUS;User:charlie;User:mds



############################# Identity Provider Settings (LDAP) #############################

# Kafka Authenticates to the directory service with the bind user.
ldap.java.naming.provider.url = ldap://localhost:10389
ldap.java.naming.security.principal=uid=admin,ou=system
ldap.java.naming.security.credentials=secret
ldap.java.naming.security.authentication=simple

# Locate users.Matches these attributes and Object Classes with what's in your directory

ldap.user.search.base=ou=users,ou=system
ldap.user.name.attribute=cn
ldap.user.object.class=inetOrgPerson

# Search groups for group-based authorization with RBAC

ldap.search.mode=GROUPS
ldap.group.object.class=groupOfNames
ldap.group.search.base=cn=Developers,ou=groups,ou=system
ldap.group.name.attribute=cn
ldap.group.member.attribute=member
ldap.group.member.attribute.pattern=cn=(.*),ou=users,ou=system



############################# MDS Server Settings #############################
# Bind Metadata Service HTTP service to port 8090.
confluent.metadata.server.listeners=http://0.0.0.0:8090
confluent.metadata.server.advertised.listeners=http://127.0.0.1:8090

# The key to encrypt the token (when you issue you a token)
confluent.metadata.server.token.key.path=/home/sumo/Documents/git-repo/cfk/rbac/ldap/local/keys/tokenkeypair.pem

# Supported authentication methods
confluent.metadata.server.authentication.method=BEARER

############################# Token Listener Settings #############################
# Add named listener TOKEN to existing listeners and advertised.listeners
advertised.listeners=PLAINTEXT://localhost:9094,TOKEN://localhost:9092
listeners=PLAINTEXT://:9094,TOKEN://:9092

# Set SASL callback handler for handling tokens on login. This is essentially a noop if not used for inter-broker communication.
listener.name.token.oauthbearer.sasl.login.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler

# Set SASL callback handler for verifying authentication token signatures
listener.name.token.oauthbearer.sasl.server.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler

# Configure the public key used to verify RBAC Metadata Service signatures
listener.name.token.oauthbearer.sasl.jaas.config= \
   org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
   publicKeyPath="/home/sumo/Documents/git-repo/cfk/rbac/ldap/local/keys/publickey.pem";

# Add protocol mapping for newly-added named listener TOKEN
listener.security.protocol.map=PLAINTEXT:PLAINTEXT,TOKEN:SASL_PLAINTEXT
listener.name.token.sasl.enabled.mechanisms=OAUTHBEARER























apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dataVolumeCapacity: 5Gi
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    external:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
  authorization:
    type: rbac
    superUsers:
    - User:rahul
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      provider:
        type: ldap
        ldap:
          address: ldap://ldap.confluent.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: credential
          configurations:
            groupNameAttribute: cn
            groupObjectClass: groupofNames
            groupMemberAttribute: member
            groupMemberAttributePattern: cn=(.*?),ou=(.*?),ou=users,dc=example,dc=com
            groupSearchBase: ou=groups,dc=example,dc=com
            userNameAttribute: cn
            userObjectClass: person
            userSearchBase: ou=users,dc=example,dc=com
            userSearchScope: 2
  configOverrides:
    server:
      - "ldap.search.mode=GROUPS"
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2181
---
